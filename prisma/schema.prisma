// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model EntityKind {
  id       Int          @id @default(autoincrement())
  name     String       @unique
  entities Entity[]
  props    EntityProp[]

  @@map("entity_kind")
}

enum EntityPropType {
  CATEGORICAL
  NUMERICAL
  CHRONOLOGICAL
  GEOGRAPHICAL
}

model EntityProp {
  id     Int               @id @default(autoincrement())
  name   String
  type   EntityPropType
  kinds  EntityKind[]
  values EntityPropValue[]

  @@map("entity_prop")
}

model Entity {
  id         Int               @id @default(autoincrement())
  kind       EntityKind        @relation(fields: [kindId], references: [id])
  kindId     Int               @map("kind_id")
  name       String
  externalId String?           @map("external_id")
  createdAt  DateTime          @default(now()) @map("created_at")
  updatedAt  DateTime          @default(now()) @updatedAt @map("updated_at")
  props      EntityPropValue[]
  dailyPicks DailyEntity[]
}

model EntityPropValue {
  entity   Entity @relation(fields: [entityId], references: [id], onDelete: Cascade)
  entityId Int    @map("entity_id")

  prop   EntityProp @relation(fields: [propId], references: [id])
  propId Int        @map("entity_prop_id")

  value     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@id([propId, entityId])
  @@index([entityId, propId])
  @@map("entity_prop_value")
}

model DailyEntity {
  id       Int      @id @default(autoincrement())
  day      DateTime
  entity   Entity   @relation(fields: [entityId], references: [id])
  entityId Int      @map("entity_id")

  @@map("daily_entity")
}
